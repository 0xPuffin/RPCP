{"version":3,"sources":["Components/InfosAccount.jsx","App.js","index.js"],"names":["InfosAccount","props","loader","accounts","length","balance","className","address","App","useState","setLoader","setAccounts","setBalance","quantity","setQuantity","data","setData","window","ethereum","provider","ethers","providers","Web3Provider","contract","Contract","abi","totalSupply","priceRaton","priceCarcajou","priceRenard","priceLoup","priceOurs","tokenAddress","console","log","tokenContract","ERC20","allowance","approved","BigNumber","from","lte","object","String","signer","getSigner","withdrawCommission","transaction","wait","usdc","overrides","approve","saleRaton","saleCarcajou","saleRenard","saleLoup","saleOurs","getAccounts","request","method","getBalance","balanceInEth","utils","formatEther","useEffect","fetchData","href","target","rel","hidden","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gkgHAoBeA,MAnBf,SAAsBC,GAClB,OACI,+BACMA,EAAMC,QACJD,EAAME,SAASC,OAAS,EACxB,gCACA,6DAAgCH,EAAME,SAAS,MAC9CF,EAAMI,SAAW,0CAAaJ,EAAMI,QAAnB,2BACjBJ,EAAMI,QAAU,KAAQ,mBAAGC,UAAU,aAGtC,kK,gBCHVC,EAAU,6CAiQDC,MA/Pf,WAEE,MAA4BC,oBAAS,GAArC,mBAAOP,EAAP,KAAeQ,EAAf,KACA,EAAgCD,mBAAS,IAAzC,mBAAON,EAAP,KAAiBQ,EAAjB,KACA,EAA8BF,qBAA9B,mBAAOJ,EAAP,KAAgBO,EAAhB,KACA,EAAgCH,mBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAwBL,mBAAS,IAAjC,mBAAOM,EAAP,KAAaC,EAAb,KANa,sDAkBb,yHACgC,qBAApBC,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpDK,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKN,GAHhE,kBAKgCI,EAASG,cALzC,cAKYA,EALZ,gBAM+BH,EAASI,aANxC,cAMYA,EANZ,iBAOkCJ,EAASK,gBAP3C,eAOYA,EAPZ,iBAQgCL,EAASM,cARzC,eAQYA,EARZ,iBAS8BN,EAASO,YATvC,eASYA,EATZ,iBAU8BP,EAASQ,YAVvC,eAUYA,EAVZ,iBAWiCR,EAASS,eAX1C,eAWYA,EAXZ,OAYMC,QAAQC,IAAIF,EAAc7B,GACpBgC,EAAgB,IAAIf,IAAOI,SAASQ,EAAcI,EAAMX,IAAKN,GAbzE,UAc8BgB,EAAcE,UAAUlC,EAAS,GAAI6B,GAdnE,QAcYK,EAdZ,OAeYC,EAAWC,IAAUC,KAAK,cAAcC,IAAIF,IAAUC,KAAKH,IACjEJ,QAAQC,IAAR,yBAA8BC,EAA9B,YAA+CI,IAAUC,KAAKH,GAA9D,YAA4EC,IACtEI,EAAS,CAAC,SAAWJ,EAAU,aAAgBK,OAAOX,GAAe,WAAcW,OAAOhB,GAAY,cAAiBgB,OAAOf,GAAe,YAAee,OAAOd,GAAa,UAAac,OAAOb,GAAW,UAAaa,OAAOZ,GAAW,YAAeY,OAAOjB,IAC1QV,EAAQ0B,GAlBd,kDAqBMT,QAAQC,IAAR,MArBN,2DAlBa,4EAoDb,uGACgC,qBAApBjB,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpD0B,EAASzB,EAAS0B,YAClBtB,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKmB,GAJhE,kBAQgCrB,EAASuB,qBARzC,cAQYC,EARZ,iBASYA,EAAYC,OATxB,0DAYMf,QAAQC,IAAR,MAZN,2DApDa,4EAqEb,+GACgC,qBAApBjB,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpD0B,EAASzB,EAAS0B,YAClBtB,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKN,GAJhE,SAK+BI,EAASS,eALxC,cAKUA,EALV,OAMUiB,EAAO,IAAI7B,IAAOI,SAASQ,EAAcI,EAAMX,IAAKmB,GACpD/B,EAAW0B,IAAUC,KAAK,cAPpC,SASUU,EAAY,CACdV,KAAMrC,EAAS,IAVvB,UAYgC8C,EAAKE,QAAQ5C,EAASM,EAAUqC,GAZhE,eAYYH,EAZZ,iBAaYA,EAAYC,OAbxB,0DAgBMf,QAAQC,IAAR,MAhBN,2DArEa,4EA0Fb,yGACgC,qBAApBjB,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpD0B,EAASzB,EAAS0B,YAClBtB,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKmB,GAJhE,SAOUM,EAAY,CACdV,KAAMrC,EAAS,IARvB,SAYgCoB,EAAS6B,UAAUjD,EAAS,GAAIU,EAAUqC,GAZ1E,cAYYH,EAZZ,iBAaYA,EAAYC,OAbxB,0DAgBMf,QAAQC,IAAR,MAhBN,2DA1Fa,4EA+Gb,yGACgC,qBAApBjB,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpD0B,EAASzB,EAAS0B,YAClBtB,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKmB,GAJhE,SAOUM,EAAY,CACdV,KAAMrC,EAAS,IARvB,SAYgCoB,EAAS8B,aAAalD,EAAS,GAAIU,EAAUqC,GAZ7E,cAYYH,EAZZ,iBAaYA,EAAYC,OAbxB,0DAgBMf,QAAQC,IAAR,MAhBN,2DA/Ga,4EAoIb,yGACgC,qBAApBjB,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpD0B,EAASzB,EAAS0B,YAClBtB,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKmB,GAJhE,SAOUM,EAAY,CACdV,KAAMrC,EAAS,IARvB,SAYgCoB,EAAS+B,WAAWnD,EAAS,GAAIU,EAAUqC,GAZ3E,cAYYH,EAZZ,iBAaYA,EAAYC,OAbxB,0DAgBMf,QAAQC,IAAR,MAhBN,2DApIa,4EAyJb,yGACgC,qBAApBjB,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpD0B,EAASzB,EAAS0B,YAClBtB,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKmB,GAJhE,SAOUM,EAAY,CACdV,KAAMrC,EAAS,IARvB,SAYgCoB,EAASgC,SAASpD,EAAS,GAAIU,EAAUqC,GAZzE,cAYYH,EAZZ,iBAaYA,EAAYC,OAbxB,0DAgBMf,QAAQC,IAAR,MAhBN,2DAzJa,4EA8Kb,yGACgC,qBAApBjB,OAAOC,SADnB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpD0B,EAASzB,EAAS0B,YAClBtB,EAAW,IAAIH,IAAOI,SAASjB,EAASiB,EAASC,IAAKmB,GAJhE,SAOUM,EAAY,CACdV,KAAMrC,EAAS,IARvB,SAYgCoB,EAASiC,SAASrD,EAAS,GAAIU,EAAUqC,GAZzE,cAYYH,EAZZ,iBAaYA,EAAYC,OAbxB,0DAgBMf,QAAQC,IAAR,MAhBN,2DA9Ka,+BAmMEuB,IAnMF,qFAmMb,uGACgC,qBAApBxC,OAAOC,SADnB,iCAEyBD,OAAOC,SAASwC,QAAQ,CAAEC,OAAQ,wBAF3D,cAEQxD,EAFR,OAGIQ,EAAYR,GACNgB,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UAJ9D,SAK0BC,EAASyC,WAAWzD,EAAS,IALvD,OAKUE,EALV,OAMUwD,EAAezC,IAAO0C,MAAMC,YAAY1D,GAC9CO,EAAWiD,GAPf,6CAnMa,sBA+MX,OAvMFG,qBAAU,WACRP,IACItD,EAASC,OAAS,GAAKF,IAEzBQ,GAAU,GAZD,mCAaTuD,MAED,CAAC9D,IAiMA,qBAAKG,UAAU,OAAf,SAEc,0BAASA,UAAU,OAAnB,UACI,sBAAKA,UAAU,OAAf,qBAA8B,uBAC5B,mBAAG4D,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAxE,SAAqF,wBAAQ9D,UAAU,MAAlB,oBACrF,mBAAG4D,KAAK,qFAAqFC,OAAO,SAASC,IAAI,aAAjH,SAA8H,wBAAQ9D,UAAU,MAAlB,6BAGhI,qBAAKA,UAAU,QAAf,SACA,gCAAK,uBAAS,uBACR,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAcH,SAAUA,EAAUE,QAASA,EAASH,OAAQA,MAE5D,6CAAe,sBAAMI,UAAU,MAAhB,sCACf,+BAAKS,EAAKW,YAAV,qBAAwC,uBAAMpB,UAAU,MAAhB,cAAwBS,EAAKY,WAAWd,EAAhB,SAAyB,GAAM,IAAvD,YACA,uBAAMP,UAAU,MAAK+D,QAAM,EAA3B,cAA8BtD,EAAKa,cAAcf,EAAnB,SAA4B,GAAM,IAAhE,WACA,uBAAMP,UAAU,MAAK+D,QAAM,EAA3B,cAA8BtD,EAAKc,YAAYhB,EAAjB,SAA0B,GAAM,IAA9D,WACA,uBAAMP,UAAU,MAAK+D,QAAM,EAA3B,cAA8BtD,EAAKe,UAAUjB,EAAf,SAAwB,GAAM,IAA5D,WACA,uBAAMP,UAAU,MAAK+D,QAAM,EAA3B,cAA8BtD,EAAKgB,UAAUlB,EAAf,SAAwB,GAAM,IAA5D,cACxC,8BACE,wBAAQP,UAAU,MAAMgE,QApL9B,WAClBzD,EAAW,GAAK,GAAKC,EAAYD,EAAW,IAmLpB,4BACA,wBAAQP,UAAU,MAAMgE,QAzL9B,WAClBzD,EAAW,GAAK,GAAKC,EAAYD,EAAW,IAwLpB,yBACGE,EAAKuB,SAIR,qCACA,yBAAQhC,UAAU,MAAMgE,QA3O3C,2CA2OmB,kBAAkDzD,EAAlD,UACA,yBAAQP,UAAU,MAAMgE,QA5O3C,2CA4OiED,QAAM,EAApD,kBAA2DxD,EAA3D,UACA,yBAAQP,UAAU,MAAMgE,QA7O3C,2CA6O+DD,QAAM,EAAlD,kBAAyDxD,EAAzD,UACA,yBAAQP,UAAU,MAAMgE,QA9O3C,2CA8O6DD,QAAM,EAAhD,kBAAuDxD,EAAvD,UACA,yBAAQP,UAAU,MAAMgE,QA/O3C,2CA+O6DD,QAAM,EAAhD,kBAAuDxD,EAAvD,UACA,wBAAQP,UAAU,MAAMgE,QAhP3C,2CAgPmB,mCARA,wBAAQhE,UAAU,MAAMgE,QAxO3C,2CAwOmB,kCAcV,qBAAKhE,UAAU,QAAf,SACE,wBAAQA,UAAU,MAAMgE,QAASb,EAAjC,oCC5P1Bc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1d92c5fe.chunk.js","sourcesContent":["\r\nfunction InfosAccount(props) {\r\n    return (\r\n        <div>\r\n            {!props.loader &&\r\n                props.accounts.length > 0 ?\r\n                <div>\r\n                <p>Your connected account is : {props.accounts[0]}</p>\r\n                {props.balance && <p>You have {props.balance} ETH on your account.</p>}\r\n                {props.balance < 0.06 && <p className=\"infos\"></p>}\r\n                </div>\r\n                :\r\n                <p>You are not connected with Metamask on this website.\r\n                    Please connect with a compatible browser for Metamask, not on your phone.\r\n                </p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfosAccount;","import { useState, useEffect } from 'react';\nimport { BigNumber, ethers } from 'ethers';\nimport InfosAccount from './Components/InfosAccount';\nimport Contract from './artifacts/contracts/Rpcp.sol/Rpcp.json';\nimport ERC20 from \"./artifacts/contracts/ERC20.sol/ERC20.json\";\nimport React from 'react';\nimport './App.css';\n\n//const address = \"0x634f77aD54de7f9C92aAF9bab38700fEB199F2F6\";\nconst address = \"0x13Aa14Cda2b875a8C813653e288f95E7eB8420A4\";\n\nfunction App() {\n\n  const [loader, setLoader] = useState(true);\n  const [accounts, setAccounts] = useState([]);\n  const [balance, setBalance] = useState();\n  const [quantity, setQuantity] = useState(1);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getAccounts();\n    if (accounts.length > 0 && loader) {\n\n      setLoader(false); \n      fetchData()\n    }\n  }, [accounts])\n\n\n  async function fetchData() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(address, Contract.abi, provider);\n      try {\n        const totalSupply = await contract.totalSupply();\n        const priceRaton = await contract.priceRaton();\n        const priceCarcajou = await contract.priceCarcajou();\n        const priceRenard = await contract.priceRenard();\n        const priceLoup = await contract.priceLoup();\n        const priceOurs = await contract.priceOurs();\n        const tokenAddress = await contract.tokenAddress();\n        console.log(tokenAddress, accounts);\n        const tokenContract = new ethers.Contract(tokenAddress, ERC20.abi, provider);\n        const allowance = await tokenContract.allowance(accounts[0], tokenAddress);\n        const approved = BigNumber.from(\"2000000000\").lte(BigNumber.from(allowance));\n        console.log(`token contract ${tokenContract} ${BigNumber.from(allowance)} ${approved}`);\n        const object = {\"approved\":approved, \"tokenAddress\": String(tokenAddress), \"priceRaton\": String(priceRaton),\"priceCarcajou\": String(priceCarcajou),\"priceRenard\": String(priceRenard),\"priceLoup\": String(priceLoup),\"priceOurs\": String(priceOurs),\"totalSupply\": String(totalSupply)}\n        setData(object);\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n  \n  const incrementQuantity = () => { \n          quantity + 1 <= 4 && setQuantity(quantity + 1);\n  }\n\n  const decrementQuantity = () => { \n          quantity - 1 >= 1 && setQuantity(quantity - 1)\n  }\n\n  async function withdrawCommission() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(address, Contract.abi, signer);\n\n      try {\n        \n        const transaction = await contract.withdrawCommission();\n        await transaction.wait();\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function approveUSDC() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(address, Contract.abi, provider);\n      const tokenAddress = await contract.tokenAddress();\n      const usdc = new ethers.Contract(tokenAddress, ERC20.abi, signer);\n      const quantity = BigNumber.from(\"2000000000\");//Amount to approve for is set here. 2000000000 == $2000 for usdc for another coin could get the .decimals() value from the contract loaded on the line above this\n      try {\n        let overrides = {\n          from: accounts[0],\n        }\n        const transaction = await usdc.approve(address, quantity, overrides);\n        await transaction.wait();\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function saleRaton() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(address, Contract.abi, signer);\n\n      try {\n        let overrides = {\n          from: accounts[0],\n     //     value: (data.priceRaton * quantity).toString(),\n\n        }\n        const transaction = await contract.saleRaton(accounts[0], quantity, overrides);\n        await transaction.wait();\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function saleCarcajou() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(address, Contract.abi, signer);\n\n      try {\n        let overrides = {\n          from: accounts[0],\n       //   value: (data.priceCarcajou * quantity).toString(),\n\n        }\n        const transaction = await contract.saleCarcajou(accounts[0], quantity, overrides);\n        await transaction.wait();\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function saleRenard() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(address, Contract.abi, signer);\n\n      try {\n        let overrides = {\n          from: accounts[0],\n      //    value: (data.priceRenard * quantity).toString(),\n\n        }\n        const transaction = await contract.saleRenard(accounts[0], quantity, overrides);\n        await transaction.wait();\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function saleLoup() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(address, Contract.abi, signer);\n\n      try {\n        let overrides = {\n          from: accounts[0],\n     //     value: (data.priceLoup * quantity).toString(),\n\n        }\n        const transaction = await contract.saleLoup(accounts[0], quantity, overrides);\n        await transaction.wait();\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function saleOurs() {\n    if(typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(address, Contract.abi, signer);\n\n      try {\n        let overrides = {\n          from: accounts[0],\n    //      value: (data.priceOurs * quantity).toString(),\n\n        }\n        const transaction = await contract.saleOurs(accounts[0], quantity, overrides);\n        await transaction.wait();\n      }\n      catch(err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function getAccounts() {\n    if(typeof window.ethereum !== 'undefined') {\n      let accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccounts(accounts);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const balance = await provider.getBalance(accounts[0]);\n      const balanceInEth = ethers.utils.formatEther(balance);\n      setBalance(balanceInEth);\n    }\n  }\n  \n\n    return (\n      <div className=\"row \">\n                \n                    <section className=\"hero\">\n                        <div className=\"logo\">The RPCP<br></br>\n                          <a href=\"https://theredpawsclubproject.weebly.com/\" target=\"_blank\" rel='noreferrer'><button className=\"btn\">SITE</button></a>\n                          <a href=\"https://drive.google.com/file/d/1Uv4_VP4vOTMoFIVT9Fi71eN604G_Pb_0/view?usp=sharing\" target=\"_blank\" rel='noreferrer'><button className=\"btn\">WHITEPAPER</button></a>\n\n                        </div>\n                        <div className=\"heroG\">\n                        <div><br></br><br></br>\n                              <div className=\"App\">\n                                <InfosAccount accounts={accounts} balance={balance} loader={loader} />\n                              </div>\n                                <h1>Welcome on <span className=\"red\">RED PAWS CLUB PROJECT</span></h1>\n                                <h2>{data.totalSupply} Supply / 5 000 - <span className=\"red\"> {data.priceRaton*quantity/10 ** 18} USDC </span>\n                                                                        <span className=\"red\"hidden> {data.priceCarcajou*quantity/10 ** 18} ETH </span>\n                                                                        <span className=\"red\"hidden> {data.priceRenard*quantity/10 ** 18} ETH </span>\n                                                                        <span className=\"red\"hidden> {data.priceLoup*quantity/10 ** 18} ETH </span>\n                                                                        <span className=\"red\"hidden> {data.priceOurs*quantity/10 ** 18} ETH </span></h2>\n                                <p>\n                                  <button className=\"btn\" onClick={decrementQuantity}>REDUCE (MIN 1)</button>                               \n                                  <button className=\"btn\" onClick={incrementQuantity}>ADD (MAX 4)</button>         \n                                  { !data.approved ?\n                                  \n                                  <button className=\"btn\" onClick={approveUSDC}>APPROVE USDC</button>\n                                  :\n                                  <>\n                                  <button className=\"btn\" onClick={saleRaton}>MINT {quantity} NFT</button>\n                                  <button className=\"btn\" onClick={saleCarcajou}hidden>MINT {quantity} NFT</button>\n                                  <button className=\"btn\" onClick={saleRenard}hidden>MINT {quantity} NFT</button>\n                                  <button className=\"btn\" onClick={saleLoup}hidden>MINT {quantity} NFT</button>\n                                  <button className=\"btn\" onClick={saleOurs}hidden>MINT {quantity} NFT</button>\n                                  <button className=\"btn\" onClick={withdrawCommission}>WITHDRAW COMMISION</button>\n                                  </>\n                                  }                        \n                                \n                              </p></div>\n                        </div>\n                        <div className='heroD'>\n                          <button className=\"btn\" onClick={getAccounts}>CONNECT WALLET</button>\n                        </div>\n                    </section>\n            </div> \n    );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}